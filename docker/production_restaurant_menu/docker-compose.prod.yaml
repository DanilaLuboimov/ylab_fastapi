version: '3.8'

services:
    db:
        image: postgres:15.1-alpine
        container_name: prod_db
        restart: always
        expose:
            - "5432"
        ports:
            - "5432:5432"
        environment:
            POSTGRES_USER: root
            POSTGRES_PASSWORD: root
            POSTGRES_DB: ylab_menu
            POSTGRES_INITDB_ARGS: "-A md5"
        volumes:
            - ../../pg_data:/var/lib/postgresql/data/
        networks:
            - ylab_network
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U root -d ylab_menu"]
            interval: 5s
            timeout: 10s
            retries: 10
            start_period: 10s
    app:
        build:
            context: ../../
            dockerfile: ./docker/application/Dockerfile
        container_name:
            prod_fastapi
        entrypoint: "uvicorn main:app --host 0.0.0.0 --reload"
        ports:
            - "8000:8000"
        env_file:
            - ../../prod.env
        depends_on:
            db:
                condition: service_healthy
            redis:
                condition: service_healthy
            rabbit:
                condition: service_healthy
        networks:
            - ylab_network
        volumes:
            - ../../files:/srv/media
            - ../../app:/fastapi_app
    redis:
        container_name: prod_redis
        image: redis:latest
        expose:
            - 6379
        ports:
            - "6379:6379"
        healthcheck:
            test: [ "CMD", "redis-cli", "ping" ]
            interval: 5s
            timeout: 10s
            retries: 10
        networks:
            - ylab_network
    rabbit:
        container_name: prod_rabbit
        hostname: rabbit
        image: rabbitmq:3.10.7-management
        restart: always
        environment:
            - RABBITMQ_DEFAULT_USER=rmuser
            - RABBITMQ_DEFAULT_PASS=rmpassword
            - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit disk_free_limit 2147483648
            - RABBITMQ_DEFAULT_VHOST=rabbit_prod
        ports:
            - "15672:15672"
        healthcheck:
            test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
            interval: 10s
            timeout: 5s
            retries: 20
        networks:
            - ylab_network
    celery:
        container_name: prod_celery_worker
        build:
            context: ../../
            dockerfile: ./docker/application/Dockerfile
        command: celery -A tasks.worker:worker worker --loglevel=INFO -P threads
        env_file:
            - ../../prod.env
        depends_on:
            app:
                condition: service_started
        networks:
            - ylab_network
        links:
            - app
        volumes:
            - ../../files:/srv/media
            - ../../app:/fastapi_app
networks:
    ylab_network:
        driver: bridge
